@model IEnumerable<CrudDF3.Models.Role>

@{
    ViewData["Title"] = "Gestión de Roles";
}

<style>
    :root {
        --verde-primario: #2e8b57; /* SeaGreen */
        --verde-secundario: #3cb371; /* MediumSeaGreen */
        --verde-claro: #98fb98; /* PaleGreen */
        --verde-oscuro: #006400; /* DarkGreen */
        --verde-agua: #20b2aa; /* LightSeaGreen */
        --beige: #f5f5dc; /* Beige */
    }

    body {
        background-color: #f8f9fa;
    }

    .card {
        border: none;
        border-radius: 10px;
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, var(--verde-primario), var(--verde-oscuro));
        color: white;
    }

    .btn-success {
        background-color: var(--verde-primario);
        border-color: var(--verde-primario);
    }

        .btn-success:hover {
            background-color: var(--verde-oscuro);
            border-color: var(--verde-oscuro);
        }

    .table thead {
        background-color: var(--verde-primario);
        color: white;
    }

    .badge-activo {
        background-color: var(--verde-secundario);
        color: white;
    }

    .badge-inactivo {
        background-color: #6c757d;
        color: white;
    }

    .badge-permiso {
        background-color: var(--verde-claro);
        color: var(--verde-oscuro);
        border: 1px solid var(--verde-secundario);
    }

    .btn-outline-warning {
        color: var(--verde-oscuro);
        border-color: var(--verde-oscuro);
    }

        .btn-outline-warning:hover {
            background-color: var(--verde-oscuro);
            color: white;
        }

    .btn-outline-info {
        color: var(--verde-agua);
        border-color: var(--verde-agua);
    }

        .btn-outline-info:hover {
            background-color: var(--verde-agua);
            color: white;
        }

    .form-control:focus {
        border-color: var(--verde-secundario);
        box-shadow: 0 0 0 0.25rem rgba(46, 139, 87, 0.25);
    }

    .pagination .page-item.active .page-link {
        background-color: var(--verde-primario);
        border-color: var(--verde-primario);
    }

    .pagination .page-link {
        color: var(--verde-primario);
    }
</style>

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-6 text-verde-oscuro">
            <i class="fas fa-user-shield me-2"></i>@ViewData["Title"]
        </h1>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus-circle me-1"></i>Nuevo Rol
        </a>
    </div>

    <!-- Card contenedora -->
    <div class="card shadow-sm">
        <div class="card-header py-3">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h5 class="mb-0">
                        <i class="fas fa-list-ol me-2"></i>Registros encontrados: @Model.Count()
                    </h5>
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" id="searchInput" class="form-control" placeholder="Buscar roles...">
                        <button class="btn btn-light" type="button" id="searchButton">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="rolesTable">
                    <thead>
                        <tr>
                            <th class="sortable" data-sort="nombre">@Html.DisplayNameFor(model => model.NombreRol) <i class="fas fa-sort"></i></th>
                            <th>@Html.DisplayNameFor(model => model.DescripcionRol)</th>
                            <th class="sortable" data-sort="estado">@Html.DisplayNameFor(model => model.EstadoRol) <i class="fas fa-sort"></i></th>
                            <th>Permisos Asociados</th>
                            <th class="text-end">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <strong>@Html.DisplayFor(modelItem => item.NombreRol)</strong>
                                </td>
                                <td class="text-truncate" style="max-width: 200px;" title="@item.DescripcionRol">
                                    @Html.DisplayFor(modelItem => item.DescripcionRol)
                                </td>
                                <td>
                                    @if (item.EstadoRol)
                                    {
                                        <span class="badge badge-activo rounded-pill">
                                            <i class="fas fa-check-circle me-1"></i>Activo
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-inactivo rounded-pill">
                                            <i class="fas fa-times-circle me-1"></i>Inactivo
                                        </span>
                                    }
                                </td>
                                <td>
                                    @if (item.RolPermisos != null && item.RolPermisos.Any())
                                    {
                                        <div class="d-flex flex-wrap gap-1">
                                            @foreach (var permiso in item.RolPermisos.Take(3).Select(rp => rp.IdPermisoNavigation))
                                            {
                                                <span class="badge badge-permiso">
                                                    @permiso.NombrePermiso
                                                </span>
                                            }
                                            @if (item.RolPermisos.Count > 3)
                                            {
                                                <span class="badge bg-light text-dark border">
                                                    +@(item.RolPermisos.Count - 3) más
                                                </span>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="badge bg-light text-muted border">Sin permisos</span>
                                    }
                                </td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@item.IdRol"
                                           class="btn btn-sm btn-outline-warning"
                                           title="Editar"
                                           data-bs-toggle="tooltip">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Details" asp-route-id="@item.IdRol"
                                           class="btn btn-sm btn-outline-info"
                                           title="Detalles"
                                           data-bs-toggle="tooltip">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.IdRol"
                                           class="btn btn-sm btn-outline-danger"
                                           title="Eliminar"
                                           data-bs-toggle="tooltip">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pie de tabla -->
        <div class="card-footer bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="toggleInactive">
                    <label class="form-check-label" for="toggleInactive">Mostrar inactivos</label>
                </div>
                <nav aria-label="Page navigation">
                    <ul class="pagination pagination-sm mb-0">
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1">Anterior</a>
                        </li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link" href="#">Siguiente</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Inicializar tooltips
        $(function () {
            $('[data-bs-toggle="tooltip"]').tooltip();
        });

        // Búsqueda en tiempo real
        $('#searchInput').keyup(function() {
            const searchText = $(this).val().toLowerCase();
            $('#rolesTable tbody tr').each(function() {
                const rowText = $(this).text().toLowerCase();
                $(this).toggle(rowText.indexOf(searchText) > -1);
            });
        });

        // Ordenar columnas
        $('.sortable').click(function() {
            const table = $(this).parents('table').eq(0);
            const rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
            this.asc = !this.asc;
            if (!this.asc) {
                rows = rows.reverse();
            }
            for (let i = 0; i < rows.length; i++) {
                table.append(rows[i]);
            }
            updateSortIcons(this);
        });

        function comparer(index) {
            return function(a, b) {
                const valA = getCellValue(a, index);
                const valB = getCellValue(b, index);
                return $.isNumeric(valA) && $.isNumeric(valB) ?
                    valA - valB : valA.toString().localeCompare(valB);
            }
        }

        function getCellValue(row, index) {
            return $(row).children('td').eq(index).text();
        }

        function updateSortIcons(element) {
            $('.sortable i').removeClass('fa-sort-up fa-sort-down').addClass('fa-sort');
            const icon = $(element).find('i');
            icon.removeClass('fa-sort');
            icon.addClass(this.asc ? 'fa-sort-up' : 'fa-sort-down');
        }

        // Toggle para mostrar/ocultar inactivos
        $('#toggleInactive').change(function() {
            const showInactive = $(this).is(':checked');
            $('#rolesTable tbody tr').each(function() {
                const isInactive = $(this).find('td').eq(2).text().includes('Inactivo');
                $(this).toggle(showInactive || !isInactive);
            });
        });
    </script>
}