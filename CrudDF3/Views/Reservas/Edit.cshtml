@model CrudDF3.Models.ViewModels.EditReservaViewModel

@{
    ViewData["Title"] = "Editar Reserva";
}

<h1>@ViewData["Title"]</h1>
<hr />

<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdReserva" />

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="IdUsuario" class="control-label"></label>
                        <select asp-for="IdUsuario" asp-items="Model.Usuarios" class="form-control"></select>
                        <span asp-validation-for="IdUsuario" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="FechaInicial" class="control-label"></label>
                        <input asp-for="FechaInicial" class="form-control" type="date" />
                        <span asp-validation-for="FechaInicial" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="FechaFinal" class="control-label"></label>
                        <input asp-for="FechaFinal" class="form-control" type="date" />
                        <span asp-validation-for="FechaFinal" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="NumeroPersonas" class="control-label"></label>
                        <input asp-for="NumeroPersonas" class="form-control" readonly />
                        <span asp-validation-for="NumeroPersonas" class="text-danger"></span>
                        <small class="form-text text-muted">Calculado automáticamente según los paquetes seleccionados</small>
                    </div>
                    <div class="form-group">
                        <label asp-for="Valor" class="control-label"></label>
                        <input asp-for="Valor" class="form-control" readonly />
                        <span asp-validation-for="Valor" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Anticipo" class="control-label"></label>
                        <input asp-for="Anticipo" class="form-control" />
                        <span asp-validation-for="Anticipo" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">Paquetes Turísticos</h5>
                </div>
                <div class="card-body">
                    @if (Model.PaquetesDisponibles != null && Model.PaquetesDisponibles.Any())
                    {
                        <div class="row">
                            @foreach (var paquete in Model.PaquetesDisponibles)
                            {
                                <div class="col-md-4 mb-3">
                                    <div class="card h-100">
                                        <div class="card-body">
                                            <div class="form-check">
                                                <input class="form-check-input paquete-checkbox"
                                                       type="checkbox"
                                                       name="PaquetesSeleccionados"
                                                       value="@paquete.IdPaquete"
                                                       id="paquete_@paquete.IdPaquete"
                                                       data-precio="@paquete.PrecioPaquete"
                                                       data-capacidad="@paquete.CapacidadPaquete"
                                                @(Model.PaquetesSeleccionados.Contains(paquete.IdPaquete) ? "checked" : "")>
                                                <label class="form-check-label" for="paquete_@paquete.IdPaquete">
                                                    <strong>@paquete.NombrePaquete</strong>
                                                </label>
                                            </div>
                                            <p class="card-text small mt-2">@paquete.DescripcionPaquete</p>
                                            <div class="d-flex justify-content-between mt-2">
                                                <span class="badge bg-primary">Capacidad: @paquete.CapacidadPaquete personas</span>
                                                <span class="badge bg-success">
                                                    @(paquete.PrecioPaquete?.ToString("C") ?? "Gratis")
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No hay paquetes disponibles</p>
                    }
                </div>
            </div>

            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Guardar Cambios
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Cancelar
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // Función para calcular el total de personas, precio y anticipo
            function calcularTotales() {
                let totalPersonas = 0;
                let totalPrecio = 0;

                // Sumar capacidades y precios de paquetes seleccionados
                $('.paquete-checkbox:checked').each(function() {
                    totalPersonas += parseInt($(this).data('capacidad')) || 0;
                    totalPrecio += parseFloat($(this).data('precio')) || 0;
                });

                // Calcular anticipo (30% del total como ejemplo)
                const anticipo = totalPrecio * 0.3;

                // Actualizar los campos
                $('#NumeroPersonas').val(totalPersonas);
                $('#Valor').val(totalPrecio.toFixed(2));
                $('#Anticipo').val(anticipo.toFixed(2));
            }

            // Escuchar cambios en los checkboxes
            $('.paquete-checkbox').change(function() {
                calcularTotales();
            });

            // También escuchar cambios en el anticipo por si se modifica manualmente
            $('#Anticipo').on('input', function() {
                // Validar que el anticipo no sea mayor que el valor total
                const valorTotal = parseFloat($('#Valor').val()) || 0;
                let anticipo = parseFloat($(this).val()) || 0;

                if (anticipo > valorTotal) {
                    anticipo = valorTotal;
                    $(this).val(anticipo.toFixed(2));
                }
            });

            // Calcular inicialmente
            calcularTotales();
        });
    </script>
}