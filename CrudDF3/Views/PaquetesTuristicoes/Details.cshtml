@model CrudDF3.Models.PaquetesTuristico

@{
    ViewData["Title"] = "Detalles del Paquete";
    var packageImages = new List<string> {
        "/Imagenes/Paquete1.jpg",
        "/Imagenes/Paquete2.jpg",
        "/Imagenes/Paquete3.jpg",
        "/Imagenes/Paquete4.jpg",
        "/Imagenes/Paquete5.jpg",
        "/Imagenes/Paquete6.jpg"
    };
    var imageIndex = Model.IdPaquete % packageImages.Count;
    var packageImage = packageImages[imageIndex];
}

<style>
    .bg-primary-dark {
        background-color: #274c77 !important;
    }

    .bg-primary-light {
        background-color: #a3cef1 !important;
    }

    .bg-primary-accent {
        background-color: #6096ba !important;
    }

    .text-primary-dark {
        color: #274c77 !important;
    }

    .text-primary-light {
        color: #a3cef1 !important;
    }

    .text-primary-accent {
        color: #6096ba !important;
    }

    .text-dark {
        color: #2b2d42 !important;
    }

    .text-light {
        color: #edf2f4 !important;
    }

    .btn-primary-dark {
        background-color: #274c77;
        color: white;
        border: none;
    }

    .btn-primary-accent {
        background-color: #6096ba;
        color: white;
        border: none;
    }

    .btn-outline-primary-dark {
        border-color: #274c77;
        color: #274c77;
    }

        .btn-outline-primary-dark:hover {
            background-color: #274c77;
            color: white;
        }
</style>

<div class="container py-5">
    <!-- Encabezado con imagen -->
    <div class="card shadow-lg mb-4 border-0 overflow-hidden">
        <div class="row g-0">
            <div class="col-md-5">
                <img src="@packageImage" class="img-fluid h-100" style="object-fit: cover;" alt="@Model.NombrePaquete">
            </div>
            <div class="col-md-7 bg-light">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <span class="badge bg-primary-dark text-light mb-2">@Model.TipoViajePaquete</span>
                            <h1 class="text-dark mb-3">@Model.NombrePaquete</h1>
                        </div>
                        <h3 class="text-primary-accent mb-0">@Model.PrecioPaquete?.ToString("C")</h3>
                    </div>

                    <p class="lead text-dark mb-4">@Model.DescripcionPaquete</p>

                    <!-- Info destacada -->
                    <div class="d-flex flex-wrap gap-3 mb-4">
                        <div class="d-flex align-items-center bg-primary-light p-2 rounded">
                            <i class="fas fa-map-marker-alt me-2 text-primary-dark"></i>
                            <span class="text-dark">@Model.DestinoPaquete</span>
                        </div>
                        <div class="d-flex align-items-center bg-primary-light p-2 rounded">
                            <i class="fas fa-calendar-alt me-2 text-primary-dark"></i>
                            <span class="text-dark">@Model.FechaPaquete?.ToString("dd MMM yyyy")</span>
                        </div>
                        <div class="d-flex align-items-center bg-primary-light p-2 rounded">
                            <i class="fas fa-boxes me-2 text-primary-dark"></i>
                            <span class="text-dark">@Model.StockPaquete disponibles</span>
                        </div>
                    </div>

                    <!-- Estado y disponibilidad -->
                    <div class="d-flex gap-3">
                        <span class="badge @(Model.DisponibilidadPaquete ? "bg-success" : "bg-danger") fs-6 py-2">
                            <i class="fas @(Model.DisponibilidadPaquete ? "fa-check" : "fa-times") me-1"></i>
                            @(Model.DisponibilidadPaquete ? "Disponible" : "Agotado")
                        </span>
                        <span class="badge @(Model.EstadoPaquete ? "bg-primary-accent" : "bg-secondary") fs-6 py-2">
                            @(Model.EstadoPaquete ? "Activo" : "Inactivo")
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Servicios incluidos -->
    <div class="card shadow-sm mb-4 border-0">
        <div class="card-header bg-primary-dark text-light py-3">
            <h3 class="mb-0">
                <i class="fas fa-concierge-bell me-2"></i>Servicios Incluidos
            </h3>
        </div>
        <div class="card-body">
            @if (Model.PaqueteServicios != null && Model.PaqueteServicios.Any())
            {
                <div class="row g-3">
                    @foreach (var servicio in Model.PaqueteServicios)
                    {
                        <div class="col-md-6">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-body">
                                    <div class="d-flex">
                                        <div class="flex-shrink-0 bg-primary-light rounded p-3 me-3">
                                            <i class="fas @GetServiceIcon(servicio.IdServicioNavigation?.Categoria) text-primary-dark fa-2x"></i>
                                        </div>
                                        <div>
                                            <h5 class="card-title text-dark">@servicio.IdServicioNavigation?.NombreServicio</h5>
                                            <p class="card-text text-muted">@servicio.IdServicioNavigation?.Descripcion</p>
                                            <div class="d-flex justify-content-between align-items-center mt-3">
                                                <span class="badge bg-primary-light text-primary-dark">
                                                    @servicio.IdServicioNavigation?.Categoria
                                                </span>
                                                <span class="text-primary-accent fw-bold">
                                                    @servicio.IdServicioNavigation?.Costo?.ToString("C")
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-4 bg-primary-light rounded">
                    <i class="fas fa-concierge-bell fa-3x text-primary-dark mb-3"></i>
                    <p class="text-muted">No hay servicios asignados a este paquete.</p>
                </div>
            }
        </div>
    </div>

    <!-- Habitaciones incluidas -->
    <div class="card shadow-sm mb-4 border-0">
        <div class="card-header bg-primary-dark text-light py-3">
            <h3 class="mb-0">
                <i class="fas fa-hotel me-2"></i>Habitaciones Incluidas
            </h3>
        </div>
        <div class="card-body">
            @if (Model.PaqueteHabitaciones != null && Model.PaqueteHabitaciones.Any())
            {
                <div class="row g-3">
                    @foreach (var habitacion in Model.PaqueteHabitaciones)
                    {
                        <div class="col-md-6">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-body">
                                    <div class="d-flex">
                                        <div class="flex-shrink-0 bg-primary-light rounded p-3 me-3">
                                            <i class="fas @GetRoomIcon(habitacion.IdHabitacionNavigation?.TipoHabitacion) text-primary-dark fa-2x"></i>
                                        </div>
                                        <div>
                                            <h5 class="card-title text-dark">@habitacion.IdHabitacionNavigation?.TipoHabitacion</h5>
                                            <p class="card-text text-muted">@habitacion.IdHabitacionNavigation?.DescripcionHabitacion</p>
                                            <div class="d-flex justify-content-between align-items-center mt-3">
                                                <span class="badge bg-primary-light text-primary-dark">
                                                    <i class="fas fa-users me-1"></i>
                                                    @habitacion.IdHabitacionNavigation?.CapacidadHuespedes personas
                                                </span>
                                                <span class="text-primary-accent fw-bold">
                                                    @habitacion.IdHabitacionNavigation?.TarifaHabitacion?.ToString("C")
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-4 bg-primary-light rounded">
                    <i class="fas fa-hotel fa-3x text-primary-dark mb-3"></i>
                    <p class="text-muted">No hay habitaciones asignadas a este paquete.</p>
                </div>
            }
        </div>
    </div>

    <!-- Botones de acción -->
    <div class="d-flex justify-content-between mt-4">
        <a asp-action="Index" class="btn btn-outline-primary-dark">
            <i class="fas fa-arrow-left me-2"></i>Volver al listado
        </a>
        <a asp-action="Edit" asp-route-id="@Model.IdPaquete" class="btn btn-primary-accent">
            <i class="fas fa-edit me-2"></i>Editar Paquete
        </a>
    </div>
</div>

@functions {
    // Función para obtener iconos según categoría de servicio
    string GetServiceIcon(string? categoria)
    {
        return categoria?.ToLower() switch
        {
            "transporte" => "fa-bus",
            "alimentación" => "fa-utensils",
            "guía" => "fa-user-tie",
            "tour" => "fa-map-marked-alt",
            _ => "fa-star"
        };
    }

    // Función para obtener iconos según tipo de habitación
    string GetRoomIcon(string? tipo)
    {
        return tipo?.ToLower() switch
        {
            "individual" => "fa-bed",
            "doble" => "fa-king-bed",
            "suite" => "fa-hotel",
            "familiar" => "fa-home",
            _ => "fa-door-open"
        };
    }
}